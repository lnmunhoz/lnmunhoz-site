{"componentChunkName":"component---src-templates-blog-post-js","path":"/technology-stack-2019/","webpackCompilationHash":"b50c03e284ba064b0a2d","result":{"data":{"site":{"siteMetadata":{"title":"Lucas N. Munhoz","author":"Lucas N. Munhoz"}},"markdownRemark":{"id":"d1581657-0ba6-50dd-abb1-403386e12fe7","excerpt":"https://images.unsplash.com/photo-1489389944381-3471b5b30f04?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\nPicture by Alex Wong Ifâ€¦","html":"<p><img src=\"https://images.unsplash.com/photo-1431576901776-e539bd916ba2?ixlib=rb-1.2.1&#x26;auto=format&#x26;fit=crop&#x26;w=1351&#x26;q=80\" alt=\"https://images.unsplash.com/photo-1489389944381-3471b5b30f04?ixlib=rb-1.2.1&#x26;ixid=eyJhcHBfaWQiOjEyMDd9&#x26;auto=format&#x26;fit=crop&#x26;w=1350&#x26;q=80\">\nPicture by <a href=\"https://unsplash.com/@killerfvith\">Alex Wong</a></p>\n<hr>\n<p>If you are on rush, skip to <a href=\"#tldr\">TLDR</a></p>\n<h3 id=\"typescript\"><a href=\"#typescript\" aria-label=\"typescript permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScript</h3>\n<p>The is from far the best choise Iâ€™ve made for my latest projects.</p>\n<p>Itâ€™s ok to use vanilla JavaScript if you are only testing a concept or making a 1 day project to play around with some technology, but if you want to build a solid project, TypeScript is your hero.</p>\n<p>Having types really encourages you to write more reliable scalable code. It may be a little bit of a learning curve in the beginning, but trust me, it will all pay off when you ship applications that donâ€™t break because of silly mistakes.</p>\n<blockquote>\n<p>I have to admit, I was skeptical when TypeScript came to the scene a few years ago. From 2012 to 2015, I was a .NET developer, and I wanted to switch my career path to work with full stack JavaScript because I was tired of Windows and Visual Studio. I remember when I finally quit .NET and all those typings and classes and I didnâ€™t took to long to TypeScript start to gain popularity and show itâ€™s true potential.</p>\n</blockquote>\n<h3 id=\"nestjs\"><a href=\"#nestjs\" aria-label=\"nestjs permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NestJS</h3>\n<p>NestJS is a progressive Node.js web framework. It gives architecture standards to build robust backends with NodeJS and is completely built with TypeScript.</p>\n<p>The nice thing about NestJS is that it already implemented all the fundamentals that a backend application needs, it encourages you to follow good practices and keep your modules organized. You will learn a lot about application architecture and <a href=\"https://refactoring.guru/design-patterns/what-is-pattern\">design patterns</a> when using NestJS.</p>\n<p>Also it has integration with famous libraries like <a href=\"https://github.com/nestjs/mongoose\">Mongoose</a>, <a href=\"https://github.com/nestjs/passport\">Passport</a>, <a href=\"https://github.com/nestjs/typeorm\">TypeORM</a>, <a href=\"https://github.com/nestjs/graphql\">GraphQL</a> and the list goes on.</p>\n<h3 id=\"graphql\"><a href=\"#graphql\" aria-label=\"graphql permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQL</h3>\n<p>I canâ€™t express enough how I am in love with GraphQL ðŸ’•</p>\n<p>Having the GraphiQL Explorer to visualize and explore the schema takes the developer experience to the next level.</p>\n<p>Using GraphQL gives you auto generated documentation for our APIs. This means whoever is using our API donâ€™t have to spend hours trying to discover how it works.</p>\n<p>Also, the huge benefits of having a <a href=\"https://graphql.org/learn/schema/\">schema</a> represeting your backend is allowing the creation of tools to auto generate code and validate your frontend integration with the API before it goes live without much effort. With tools like <a href=\"https://graphql-inspector.com/docs/\">GraphQL Inspector</a> and <a href=\"https://graphql-code-generator.com\">GraphQL Code Generator</a> it makes frontend so reliable compared to using REST apis.</p>\n<h3 id=\"react-or-vue\"><a href=\"#react-or-vue\" aria-label=\"react or vue permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React or Vue</h3>\n<p>You are probably familiar with one of this two.</p>\n<p>I personally use React beucase I like it a more opinionated approach rather than following more rules like when you use Vue. With React you can use <a href=\"https://github.com/facebook/create-react-app/\">create-react-app</a> to start your project or configure <a href=\"https://webpack.js.org/\">webpack</a> yourself.</p>\n<p>Vue in the other hand gives you application structure and <a href=\"https://cli.vuejs.org/guide/\">development guidelines</a> which can be a huge benefit. Not even talking about the <a href=\"https://cli.vuejs.org/\">Vue CLI</a> which in terms of developing experience, helps you setting up libraries, managing your bundle and much more.</p>\n<p>I canâ€™t recommend both enough!</p>\n<h3 id=\"apollo-client\"><a href=\"#apollo-client\" aria-label=\"apollo client permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Apollo Client</h3>\n<p>â€¦</p>\n<h3 id=\"mobx\"><a href=\"#mobx\" aria-label=\"mobx permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mobx</h3>\n<p>â€¦</p>\n<h2 id=\"tldr\"><a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TLDR;</h2>\n<ul>\n<li>TypeScript - Your base full stack language</li>\n<li>GraphQL - Communication layer between your server and client</li>\n<li>NestJS - For building robust APIâ€™s</li>\n<li>React or Vue - For component oriented frontends</li>\n<li>Apollo Client - Primary client to communicate with GraphQL servers</li>\n<li>Mobx - For managing complex UI state</li>\n<li>AWS Lambda - To deploy your backend without worrying about servers</li>\n<li>Netlify - For modern websites deployment</li>\n<li>Mongoose - ORM for MongoDB</li>\n<li>TypeORM - ORM for SQL databases</li>\n</ul>\n<br />\n<hr />\n<center><i>\"The reason why one man is great and another man is living in mediocrity is simply because one understood the value of time while the other did not.\"</i></center>\n<br />","frontmatter":{"title":"My Go To Technology Stack for 2019","date":"July 29, 2019","description":"Technologies for 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/technology-stack-2019/","previous":null,"next":null}}}